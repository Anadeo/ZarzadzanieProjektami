// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjektProgramowanieObiektowe.Data;

#nullable disable

namespace ProjektProgramowanieObiektowe.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250524185034_test")]
    partial class test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("ProjektProgramowanieObiektowe.Models.Pracownicy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataZatrudnienia")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_zatrudnienia");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("imie");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nazwisko");

                    b.HasKey("Id");

                    b.ToTable("pracownicy");
                });

            modelBuilder.Entity("ProjektProgramowanieObiektowe.Models.Projekty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<bool>("Czy_gotowy")
                        .HasColumnType("INTEGER")
                        .HasColumnName("czy_gotowy");

                    b.Property<DateTime>("Data_rozpoczecia")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_rozpoczecia");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nazwa");

                    b.HasKey("Id");

                    b.ToTable("projekty");
                });

            modelBuilder.Entity("ProjektProgramowanieObiektowe.Models.Przypisania", b =>
                {
                    b.Property<int>("Id_projekt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_projekt");

                    b.Property<bool>("Czy_skonczono_prace")
                        .HasColumnType("INTEGER")
                        .HasColumnName("czy_skonczono_prace");

                    b.Property<int>("Id_pracownik")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_pracownik");

                    b.Property<string>("Opis_zadania")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("opis_zadania");

                    b.Property<DateTime>("Termin_wykonania")
                        .HasColumnType("TEXT")
                        .HasColumnName("termin_wykonania");

                    b.Property<int>("id_pracownik")
                        .HasColumnType("INTEGER");

                    b.Property<int>("id_projekt")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id_projekt");

                    b.HasIndex("id_pracownik");

                    b.HasIndex("id_projekt");

                    b.ToTable("przypisania", t =>
                        {
                            t.Property("id_pracownik")
                                .HasColumnName("id_pracownik1");

                            t.Property("id_projekt")
                                .HasColumnName("id_projekt1");
                        });
                });

            modelBuilder.Entity("ProjektProgramowanieObiektowe.Models.Przypisania", b =>
                {
                    b.HasOne("ProjektProgramowanieObiektowe.Models.Pracownicy", "Pracownik")
                        .WithMany()
                        .HasForeignKey("id_pracownik")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjektProgramowanieObiektowe.Models.Projekty", "Projekty")
                        .WithMany("Przypisania")
                        .HasForeignKey("id_projekt")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pracownik");

                    b.Navigation("Projekty");
                });

            modelBuilder.Entity("ProjektProgramowanieObiektowe.Models.Projekty", b =>
                {
                    b.Navigation("Przypisania");
                });
#pragma warning restore 612, 618
        }
    }
}
